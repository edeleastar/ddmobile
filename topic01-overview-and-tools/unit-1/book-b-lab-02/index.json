{"type":"lab","chapters":[{"title":"#Objectives","shortTitle":"Lab-02","contentMd":"#Objectives\n\nIn this Lab, you will be required to build the first version of our Donation Case Study App, called <b>Donation.1.0</b>. Here, we will add in a few UI widgets on a single layout and implement some basic event handling.\n\n<b>NOTE : These Labs we build in a previous Version to Android Studio 3.0 so be aware that some images and instructions may not be up to date. Also, when replacing any XML with that from the Lab, the Widgets will not be 'anchored' so it would be advisable to go ahead and 'anchor' your widgets to improve the future design of your layouts.</b>\n"},{"title":"#Step 01 - Create Project","shortTitle":"01","contentMd":"#Step 01 - Create Project\n\nCreate a new Android application, as demonstrated in the following 5 screenshots:\n\n![](img/firstrun.png)\n\n![](img/lab2s101.png)\n\n![](img/lab2s102.png)\n\nNote the 'Minimum Required SDK' which may be different from the default (as above).\n\n![](img/lab2s103.png)\n\n![](img/lab2s104.png)\n\nThe opening project perspective is shown below, with the *content_donate* layout open in the visual designer:\n\n![](img/lab2s105.png)\n\nThe project will look like this\n\n![](img/lab2s106.png)\n\nIt is important to become familiar with the structure and purpose of the three panes surrounding the Donation 'canvas':\n\n##Pallette:\n\n![](img/lab2s107.png)\n\n##Outline\n\n![](img/lab2s108.png)\n\n##Properties\n\n![](img/lab2s109.png)\n\nThese views are closely related - and you will need to monitor the information displayed there continually as you evolve the appearance of your activities screens.\n\nAlso, take a quick look at your <b>build.gradle</b> file to see the configuration and dependencies of your app.\n\nNOTE : The version Numbers may differ depending on the API level you chose initially.\n\n![](img/lab2s110.png)\n"},{"title":"#Step 02 - Donate Layout & Resources","shortTitle":"02","contentMd":"#Step 02 - Donate Layout & Resources\n\nOn completion of this lab you'll be able to\n\n- design an initial layout for the app.\n\n- add different widgets (such as a button, text and picker) to a layout.\n\n- implement basic event handling to cause some action on the click of a button.\n\n- be able to 'filter' Log messages for testing and debugging.\n\nSo, for this lab, our objective is to produce an Android App that looks something like this:\n\n![](img/completeappv1.png)\n\nIn your <b>content_donate.xml</b>, delete the current 'Hello World' text, and drag and drop a new 'LargeText' form widget onto the canvas, and 'stretch' the widget to fill the canvas (like below). Look closely at the following:\n\n![](img/lab2s201.png)\n\nNow, Double-Click the widget and you will be presented with the following:\n\n![](img/lab2s202.png)\n\nSelect the elipse (on the right hand side, indicated below)\n\n![](img/lab2s203.png)\n\nand you will be presented with the Resources Menu\n\n![](img/lab2s204.png)\n\nSelect a 'New Resource->New String Value, and fill in the values as below\n\n![](img/lab2s205.png)\n\nDouble-Click the widget again and enter <b>donteTitle</b> for the <b>id</b> and hit return.\n\n![](img/lab2s205a.png)\n\nOnce completed, you'll have something like this\n\n![](img/lab2s206.png)\n\nNote carefully the following features:\n\n- the guides tying the text to the left, top and right corner\n- in Outline - the name of the control has been changed from a default to 'donateTitle'.\n- in Properties - check the value for 'text' and notice we have a string reference linking to our <b>strings.xml</b> (below)\n\n![](img/lab2s207.png)\n\nLocate the following two files and inspect them closely:\n\n##res/layout/content_dontate.xml\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/relativeLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n    tools:context=\".Donate\"\n    tools:layout_editor_absoluteY=\"81dp\"\n    tools:showIn=\"@layout/activity_donate\">\n\n    <TextView\n        android:id=\"@+id/donateTitle\"\n        android:layout_width=\"188dp\"\n        android:layout_height=\"30dp\"\n        android:layout_alignParentEnd=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:text=\"@string/donateTitle\"\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.044\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.017\" />\n\n</android.support.constraint.ConstraintLayout>\n\n```\n\n##res/values/strings.xml\n\n```\n<resources>\n    <string name=\"app_name\">Donation</string>\n    <string name=\"action_settings\">Settings</string>\n    <string name=\"donateTitle\">Welcome Homer</string>\n</resources>\n```\n\nNote the relationship between 'donateTitle' in both files.\n\nBring in the following string into the donate activity now - (medium text) - and follow the same procedure as above. The designer should look like this:\n\n![](img/lab2s208.png)\n\nand our XML files will look something like this:\n\n##content_dontate.xml\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/relativeLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n    tools:context=\".Donate\"\n    tools:layout_editor_absoluteY=\"81dp\"\n    tools:showIn=\"@layout/activity_donate\">\n\n    <TextView\n        android:id=\"@+id/donateTitle\"\n        android:layout_width=\"188dp\"\n        android:layout_height=\"30dp\"\n        android:layout_alignParentEnd=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:text=\"@string/donateTitle\"\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.044\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.017\" />\n\n    <TextView\n        android:id=\"@+id/donateSubtitle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignEnd=\"@+id/donateTitle\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_below=\"@+id/donateTitle\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:text=\"@string/donateSubtitle\"\n        android:textAppearance=\"?android:attr/textAppearanceMedium\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.044\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.114\" />\n\n</android.support.constraint.ConstraintLayout>\n\n```\n\n##strings.xml\n\n```\n<resources>\n    <string name=\"app_name\">Donation.1.0</string>\n    <string name=\"action_settings\">Settings</string>\n    <string name=\"donateTitle\">Welcome Homer</string>\n    <string name=\"donateSubtitle\">Please Give Generously</string>\n</resources>\n```\n"},{"title":"#Step 03 - The 'Donate' Button","shortTitle":"03","contentMd":"#Step 03 - The 'Donate' Button\n\nPlace a button directly on to the activity - attached to the bottom of the screen as shown:\n\n![](img/lab2s301.png)\n\nFollowing a similar procedure as in the previous step, rename the button and add an id, both called <b>donateButton</b> If all goes as expected, your xml files should be like this:\n\n##content_donate.xml\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/relativeLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n    tools:context=\".Donate\"\n    tools:layout_editor_absoluteY=\"81dp\"\n    tools:showIn=\"@layout/activity_donate\">\n\n    <TextView\n        android:id=\"@+id/donateTitle\"\n        android:layout_width=\"188dp\"\n        android:layout_height=\"30dp\"\n        android:layout_alignParentEnd=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:text=\"@string/donateTitle\"\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.044\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.017\" />\n\n    <TextView\n        android:id=\"@+id/donateSubtitle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignEnd=\"@+id/donateTitle\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_below=\"@+id/donateTitle\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:text=\"@string/donateSubtitle\"\n        android:textAppearance=\"?android:attr/textAppearanceMedium\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.044\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.114\" />\n\n    <Button\n        android:id=\"@+id/donateButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:text=\"@string/donateButton\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.903\" />\n\n</android.support.constraint.ConstraintLayout>\n\n```\n##strings.xml\n\n```\n<resources>\n    <string name=\"app_name\">Donation.1.0</string>\n    <string name=\"action_settings\">Settings</string>\n    <string name=\"donateTitle\">Welcome Homer</string>\n    <string name=\"donateSubtitle\">Please Give Generously</string>\n    <string name=\"donateButton\">Donate</string>\n</resources>\n```\n\nIf there is a deviation from the above - retrace your steps (delete the button) until you can match the above.\n\nWe can now switch our attention to the **Donate** Activity class :\n\n```\npackage ie.app;\n\nimport android.os.Bundle;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.design.widget.Snackbar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.view.View;\nimport android.view.Menu;\nimport android.view.MenuItem;\n\npublic class Donate extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_donate);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_donate, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n}\n```\n\nFor any 'controls' a user can interact with we usually find it useful to associate a class member with that object. Currently we only have one - a Button. The text fields we don't consider 'interactive' as such, so we will not include those.\n\nInsert the following new field into the class:\n\n```\n  private Button donateButton;\n```\n\nThe class will have to be imported. The class name will always match the name in the Palette:\n\n![](img/lab2s302.png)\n\nWe are free to call the variable anything we like. However, in order to keep confusion to a minimum, always call the variable by the same name you used in the Outline view:\n\n![](img/lab2s303.png)\n\nIn ***onCreate()*** - we need to initialise this variable:\n\n```\n    donateButton = (Button) findViewById(R.id.donateButton);\n```\n\nWe might also add a logging message so we can have some feedback as the app launches:\n\n```\n    if (donateButton != null)\n        {\n            Log.v(\"Donate\", \"Really got the donate button\");\n        }\n```\n\nThis is the complete activity class:\n\n```\npackage ie.app;\n\nimport android.os.Bundle;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.design.widget.Snackbar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.widget.Button;\n\npublic class Donate extends AppCompatActivity {\n\n    private Button donateButton;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_donate);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n\n        donateButton = (Button) findViewById(R.id.donateButton);\n\n        if (donateButton != null)\n        {\n            Log.v(\"Donate\", \"Really got the donate button\");\n        }\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_donate, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n}\n```\n\nFinding the log message can be very difficult, unless you set a filter. In the 'LogCat' view in Android Studio, create a filter like this:\n\nChoose \"Edit Filter Configuration\" on the right-hand-side of the LogCat View\n\n![](img/lab2s304.png)\n\nEnter the name and filter as below\n\n![](img/lab2s305.png)\n\nand if you then select the filter, we should see our message:\n\n![](img/lab2s306.png)\n\nRun the app again, and verify the above message appears.\n"},{"title":"#Step 04 - Documentation","shortTitle":"04","contentMd":"#Step 04 - Documentation\n\nThe android documentation is particularly helpful and well designed. These are the two key starting points:\n\n- <http://developer.android.com/guide/components/index.html>\n- <http://developer.android.com/reference/packages.html>\n\nThe first is designed to be read though as a guide, perhaps independent of any work in Android Studio. You should get into the habit of devoting an hour or two a week just reading this section.\n\nThe Reference guide should always be open as you are working on labs or projects, and you should make a serious effort to get to grips with at least some of the information here.\n\nTaking the **Button** class we have just started using. We can immediately find the reference just by knowing the import statement in our Activity class:\n\n```\nimport android.widget.Button;\n```\n\n.. translates to\n\n- <http://developer.android.com/reference/android/widget/Button.html>\n\n(note the last three segments match the package name). Open this page now. Read just as far as the \"Button Style\" heading. There seems to be two ways of learning when an button event occurs. The first method is using the event handler/listener - but a second easier method is also available.\n\nTry this now. Bring in a new method into the **Donate** class:\n\n```\n  public void donateButtonPressed (View view)\n  {\n    Log.v(\"Donate\", \"Donate Pressed!\");\n   }\n```\n\nThen, edit the <b>content_donate.xml</b> file - and add a new 'onClick' *attribute* into the Button xml fragment:\n\n```\nandroid:onClick=\"donateButtonPressed\"\n```\n\nYou can also add <b>donateButtonPressed</b> to the 'onClick' attribute in Design View. And you end up with something like this:\n\n```\n<Button\n      android:id=\"@+id/donateButton\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:layout_alignParentBottom=\"true\"\n      android:layout_centerHorizontal=\"true\"\n      android:layout_marginBottom=\"8dp\"\n      android:layout_marginEnd=\"8dp\"\n      android:layout_marginStart=\"8dp\"\n      android:layout_marginTop=\"8dp\"\n      android:onClick=\"donateButtonPressed\"\n      android:text=\"@string/donateButton\"\n      app:layout_constraintBottom_toBottomOf=\"parent\"\n      app:layout_constraintEnd_toEndOf=\"parent\"\n      app:layout_constraintStart_toStartOf=\"parent\"\n      app:layout_constraintTop_toTopOf=\"parent\"\n      app:layout_constraintVertical_bias=\"0.903\" />\n```\n\n\n\nSave everything and execute the app, and monitor the log as you press the button:\n\n![](img/lab2s401.png)\n\nWe now have our first interaction working!\n"},{"title":"#Step 05 - New Control Layout","shortTitle":"05","contentMd":"#Step 05 - New Control Layout\n\nRecall the UI we are trying to implement:\n\n![](img/completeappv1.png)\n\nWe need radio buttons, some sort of selection/combo box + a progress bar. These can be found in various locations in the pallette:\n\n![](img/lab2s107.png)\n![](img/lab2s501.png)\n![](img/lab2s502.png)\n\nRadioGroup, ProgressBar and NumberPicker seem likely candidates. The names of these controls are exactly as advertised, and we can expect them to be in the 'widgets' package. To verify this, try importing them at the top of the **Donate** activity class:\n\n```\nimport android.widget.RadioGroup;\nimport android.widget.NumberPicker;\nimport android.widget.ProgressBar;\n```\n\n... and we can bring in three fields into the class:\n\n```\n  private RadioGroup   paymentMethod;\n  private ProgressBar  progressBar;\n  private NumberPicker amountPicker;\n```\n\nWe can also open up three pages of documentation - which we can reverse engineer from the package/class names:\n\n- <http://developer.android.com/reference/android/widget/RadioGroup.html>\n- <http://developer.android.com/reference/android/widget/ProgressBar.html>\n- <http://developer.android.com/reference/android/widget/NumberPicker.html>\n\nNote this time we have gone to the Activity class before actually creating the controls. We should do this now - and remember to use the same names (for the IDs) as we create the controls.\n\n![](img/lab2s503.png)\n\nand\n\n![](img/lab2s504.png)\n\nGetting the layout +id names as shown above may take some practice. However, it is an essential skill to get on top of, even it it takes a lot of trial and error.\n\nFor reference purposes (try to do it yourself first!), these are the relevant generated xml files:\n\n##content_donate.xml\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/relativeLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n    tools:context=\".Donate\"\n    tools:layout_editor_absoluteY=\"81dp\"\n    tools:showIn=\"@layout/activity_donate\">\n\n    <TextView\n        android:id=\"@+id/donateTitle\"\n        android:layout_width=\"188dp\"\n        android:layout_height=\"30dp\"\n        android:layout_alignParentEnd=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:text=\"@string/donateTitle\"\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.044\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.017\" />\n\n    <TextView\n        android:id=\"@+id/donateSubtitle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignEnd=\"@+id/donateTitle\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_below=\"@+id/donateTitle\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:text=\"@string/donateSubtitle\"\n        android:textAppearance=\"?android:attr/textAppearanceMedium\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.044\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.114\" />\n\n    <Button\n        android:id=\"@+id/donateButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:onClick=\"donateButtonPressed\"\n        android:text=\"@string/donateButton\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.903\" />\n\n    <RadioGroup\n        android:id=\"@+id/paymentMethod\"\n        android:layout_width=\"181dp\"\n        android:layout_height=\"128dp\"\n        android:layout_above=\"@+id/progressBar\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_below=\"@+id/donateSubtitle\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_toStartOf=\"@+id/amountPicker\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.042\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"@+id/donateTitle\"\n        app:layout_constraintVertical_bias=\"0.276\">\n\n        <RadioButton\n            android:id=\"@+id/PayPal\"\n            android:layout_width=\"97dp\"\n            android:layout_height=\"wrap_content\"\n            android:checked=\"true\"\n            android:text=\"@string/paypal\" />\n\n        <RadioButton\n            android:id=\"@+id/Direct\"\n            android:layout_width=\"97dp\"\n            android:layout_height=\"wrap_content\"\n            android:checked=\"false\"\n            android:text=\"@string/direct\" />\n    </RadioGroup>\n\n    <NumberPicker\n        android:id=\"@+id/amountPicker\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignEnd=\"@+id/donateSubtitle\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.973\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.333\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        style=\"?android:attr/progressBarStyleHorizontal\"\n        android:layout_width=\"349dp\"\n        android:layout_height=\"14dp\"\n        android:layout_above=\"@+id/donateButton\"\n        android:layout_alignEnd=\"@+id/donateSubtitle\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:indeterminate=\"false\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.526\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.76\" />\n\n</android.support.constraint.ConstraintLayout>\n\n```\n##strings.xml\n```\n<resources>\n    <string name=\"app_name\">Donation.1.0</string>\n    <string name=\"action_settings\">Settings</string>\n    <string name=\"donateTitle\">Welcome Homer</string>\n    <string name=\"donateSubtitle\">Please Give Generously</string>\n    <string name=\"donateButton\">Donate</string>\n    <string name=\"paypal\">PayPal</string>\n    <string name=\"direct\">Direct</string>\n</resources>\n```\n\nIf we have our naming conventions right - then we can bind to these new controls in ***onCreate()***:\n\n```\n    paymentMethod = (RadioGroup)   findViewById(R.id.paymentMethod);\n    progressBar   = (ProgressBar)  findViewById(R.id.progressBar);\n    amountPicker  = (NumberPicker) findViewById(R.id.amountPicker);\n```\n\n\nThis is the complete **Donate** class so far:\n\n```\npackage ie.app;\n\nimport android.os.Bundle;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.design.widget.Snackbar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.widget.Button;\nimport android.widget.NumberPicker;\nimport android.widget.ProgressBar;\nimport android.widget.RadioGroup;\n\npublic class Donate extends AppCompatActivity {\n\n    private Button          donateButton;\n    private RadioGroup      paymentMethod;\n    private ProgressBar     progressBar;\n    private NumberPicker    amountPicker;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_donate);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n\n        donateButton = (Button) findViewById(R.id.donateButton);\n\n        if (donateButton != null)\n        {\n            Log.v(\"Donate\", \"Really got the donate button\");\n        }\n\n        paymentMethod = (RadioGroup)   findViewById(R.id.paymentMethod);\n        progressBar   = (ProgressBar)  findViewById(R.id.progressBar);\n        amountPicker  = (NumberPicker) findViewById(R.id.amountPicker);\n\n        amountPicker.setMinValue(0);\n        amountPicker.setMaxValue(1000);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_donate, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    public void donateButtonPressed (View view)\n    {\n        Log.v(\"Donate\", \"Donate Pressed!\");\n    }\n}\n```\n"},{"title":"#Step 06 - NumberPicker","shortTitle":"06","contentMd":"#Step 06 - NumberPicker\n\nThis is our reference documentation:\n\n- <http://developer.android.com/reference/android/widget/NumberPicker.html>\n\nwhich is a little overwhelming. Back in the guides:\n\n- <http://developer.android.com/guide/components/index.html>\n\nwe might find some useful tutorial type introduction to this control - under 'User Interface' - 'Input Controls'\n\n- <http://developer.android.com/guide/topics/ui/controls.html>\n\n.. and this is the page on 'pickers'\n\n- <http://developer.android.com/guide/topics/ui/controls/pickers.html>\n\nThis documentation is concerned with Fragments - a concept that may be difficult to grasp initially, and also explores the usage of date and time pickers.\n\nWe can get up and running without this much fuss. Returning to the documentation, these three methods should be sufficient initially:\n\n- <http://developer.android.com/reference/android/widget/NumberPicker.html#setMaxValue(int)>\n- <http://developer.android.com/reference/android/widget/NumberPicker.html#setMinValue(int)>\n- <http://developer.android.com/reference/android/widget/NumberPicker.html#getValue()>\n\nIn ***onCreate()***, initialise the values:\n\n```\n    amountPicker.setMinValue(0);\n    amountPicker.setMaxValue(1000);\n```\n\nAnd in ***donateButtonPressed()***:\n\n```\n  public void donateButtonPressed (View view)\n  {\n    int amount = amountPicker.getValue();\n    Log.v(\"Donate\", \"Donate Pressed! with amount \" + amount);\n   }\n```\n\nRun this now - and verify that it operates as expected (see the actual amounts in the log file, as below).\n\n![](img/lab2s601.png)\n"},{"title":"#Step 07 - The Radio Buttons","shortTitle":"07","contentMd":"#Step 07 - The Radio Buttons\n\nIn ***donateButtonPressed()*** we need to discover which payment method has been selected. Our RadioGroup documentation is here:\n\n- <http://developer.android.com/reference/android/widget/RadioGroup.html>\n\nThis looks like the method we need:\n\n- [getCheckedRadioButtonId()](http://developer.android.com/reference/android/widget/RadioGroup.html#getCheckedRadioButtonId())\n\nThis is a revised version of ***donateButtonPressed()***\n\n```\n  public void donateButtonPressed (View view)\n  {\n    int amount = amountPicker.getValue();\n    int radioId = paymentMethod.getCheckedRadioButtonId();\n    String method = \"\";\n    if (radioId == R.id.PayPal)\n    {\n      method = \"PayPal\";\n    }\n    else\n    {\n      method = \"Direct\";\n    }\n    Log.v(\"Donate\", \"Donate Pressed! with amount \" + amount + \", method: \" + method);\n   }\n```\n\nRun it now and verify we are getting the correct logs.\n\nWe can simplify it somewhat by reducing the if statement to a single line:\n\n```\n    String method = radioId == R.id.PayPal ? \"PayPal\" : \"Direct\";\n```\n\nThis is the Java ternary operator:\n\n- <http://marxsoftware.blogspot.ie/2010/09/how-i-learned-to-stop-worrying-and-love.html>\n\nThis is the complete activity class so far:\n\n```\npackage ie.app;\n\nimport android.os.Bundle;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.design.widget.Snackbar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.widget.Button;\nimport android.widget.NumberPicker;\nimport android.widget.ProgressBar;\nimport android.widget.RadioGroup;\n\npublic class Donate extends AppCompatActivity {\n\n    private Button          donateButton;\n    private RadioGroup      paymentMethod;\n    private ProgressBar     progressBar;\n    private NumberPicker    amountPicker;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_donate);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n\n        donateButton = (Button) findViewById(R.id.donateButton);\n\n        if (donateButton != null)\n        {\n            Log.v(\"Donate\", \"Really got the donate button\");\n        }\n\n        paymentMethod = (RadioGroup)   findViewById(R.id.paymentMethod);\n        progressBar   = (ProgressBar)  findViewById(R.id.progressBar);\n        amountPicker  = (NumberPicker) findViewById(R.id.amountPicker);\n\n        amountPicker.setMinValue(0);\n        amountPicker.setMaxValue(1000);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_donate, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    public void donateButtonPressed (View view)\n    {\n        int amount = amountPicker.getValue();\n        int radioId = paymentMethod.getCheckedRadioButtonId();\n        String method = radioId == R.id.PayPal ? \"PayPal\" : \"Direct\";\n        Log.v(\"Donate\", \"Donate Pressed! with amount \" + amount + \", method: \" + method);\n    }\n}\n```\n\nSo run your app again just to confirm the LogCat entries\n\n![](img/lab2s701.png)\n"},{"title":"#Step 08 - The Progress Bar","shortTitle":"08","contentMd":"#Step 08 - The Progress Bar\n\nThe progress bar documentation:\n\n- <http://developer.android.com/reference/android/widget/ProgressBar.html>\n\noffers us advice on using the progress bar in multi-threaded application. Not quite what we are ready for yet! (but file it away for future reference).\n\nThese two methods are probably what we need:\n\n- <http://developer.android.com/reference/android/widget/ProgressBar.html#setMax(int)>\n- <http://developer.android.com/reference/android/widget/ProgressBar.html#setProgress(int)>\n\nFirst we would need to equip our activity with the ability to remember the donation amounts:\n\n```\n  private int totalDonated = 0;\n```\n\nLets set max progress bar to 10000 in ***onCreate()***:\n\n```\n    progressBar.setMax(10000);\n```\n\n.. and set the progress in ***donateButtonPressed()***:\n\n```\n    totalDonated = totalDonated + amount;\n    progressBar.setProgress(totalDonated);\n\n    Log.v(\"Donate\", \"Donate Pressed! with amount \" + amount + \", method: \" + method);\n    Log.v(\"Donate\", \"Current total \" + totalDonated);\n```\n\nTry this now and observe the progress bar and logCat\n\n![](img/lab2s801.png)\n\nThis is the complete class so far:\n\n```\npackage ie.app;\n\nimport android.os.Bundle;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.design.widget.Snackbar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.widget.Button;\nimport android.widget.NumberPicker;\nimport android.widget.ProgressBar;\nimport android.widget.RadioGroup;\n\npublic class Donate extends AppCompatActivity {\n\n    private Button          donateButton;\n    private RadioGroup      paymentMethod;\n    private ProgressBar     progressBar;\n    private NumberPicker    amountPicker;\n\n    private int             totalDonated = 0;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_donate);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n\n        donateButton = (Button) findViewById(R.id.donateButton);\n\n        if (donateButton != null)\n        {\n            Log.v(\"Donate\", \"Really got the donate button\");\n        }\n\n        paymentMethod = (RadioGroup)   findViewById(R.id.paymentMethod);\n        progressBar   = (ProgressBar)  findViewById(R.id.progressBar);\n        amountPicker  = (NumberPicker) findViewById(R.id.amountPicker);\n\n        amountPicker.setMinValue(0);\n        amountPicker.setMaxValue(1000);\n        progressBar.setMax(10000);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_donate, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    public void donateButtonPressed (View view)\n    {\n        int amount = amountPicker.getValue();\n        int radioId = paymentMethod.getCheckedRadioButtonId();\n        String method = radioId == R.id.PayPal ? \"PayPal\" : \"Direct\";\n\n        totalDonated = totalDonated + amount;\n        progressBar.setProgress(totalDonated);\n\n        Log.v(\"Donate\", \"Donate Pressed! with amount \" + amount + \", method: \" + method);\n        Log.v(\"Donate\", \"Current total \" + totalDonated);\n    }\n}\n```\n\nHere is another version of exactly the same class:\n\n```\npackage ie.app;\n\nimport android.os.Bundle;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.design.widget.Snackbar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.widget.Button;\nimport android.widget.NumberPicker;\nimport android.widget.ProgressBar;\nimport android.widget.RadioGroup;\n\npublic class Donate extends AppCompatActivity {\n\n    private Button          donateButton;\n    private RadioGroup      paymentMethod;\n    private ProgressBar     progressBar;\n    private NumberPicker    amountPicker;\n\n    private int             totalDonated = 0;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_donate);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n\n        donateButton = (Button) findViewById(R.id.donateButton);\n\n        if (donateButton != null)\n        {\n            Log.v(\"Donate\", \"Really got the donate button\");\n        }\n\n        paymentMethod = (RadioGroup)   findViewById(R.id.paymentMethod);\n        progressBar   = (ProgressBar)  findViewById(R.id.progressBar);\n        amountPicker  = (NumberPicker) findViewById(R.id.amountPicker);\n\n        amountPicker.setMinValue(0);\n        amountPicker.setMaxValue(1000);\n        progressBar.setMax(10000);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_donate, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    public void donateButtonPressed (View view)\n    {\n    totalDonated  = totalDonated + amountPicker.getValue();\n    String method = paymentMethod.getCheckedRadioButtonId() == R.id.PayPal ? \"PayPal\" : \"Direct\";\n    progressBar.setProgress(totalDonated);\n\n    Log.v(\"Donate\", amountPicker.getValue() + \" donated by \" +  method + \"\\nCurrent total \" + totalDonated);\n    }\n}\n```\n\nExamine them carefully. What are the differences? Why make these changes?\n\nNote also the careful attention to spacing and alignment in the code. Not just correct indentation, but continual attention to structuring each method carefully, removing duplication and unnecessary code and formatting/aligning the declarations and assignment statements in a table like structure:\n\nVisible here:\n\n```\n  private RadioGroup   paymentMethod;\n  private ProgressBar  progressBar;\n  private NumberPicker amountPicker;\n\n  private int          totalDonated = 0;\n```\n\nand here:\n\n```\n    paymentMethod = (RadioGroup)   findViewById(R.id.paymentMethod);\n    progressBar   = (ProgressBar)  findViewById(R.id.progressBar);\n    amountPicker  = (NumberPicker) findViewById(R.id.amountPicker);\n```\n\nand here:\n\n```\n    totalDonated  = totalDonated + amountPicker.getValue();\n    String method = paymentMethod.getCheckedRadioButtonId() == R.id.PayPal ? \"PayPal\" : \"Direct\";\n```\n\nAndroid code can become very verbose and complex. Carefully formatting is essential if you are not to be overwhelmed.\n"},{"title":"#Exercises","shortTitle":"Exercises","contentMd":"#Exercises\n\nArchive of lab so far:\n\n- [Donation.1.0.zip](archives/Donation.1.0.zip)\n\n##Exercise 1:\n\nConsider an alternative to the NumberPicker - specifically one of the \"Text Fields\" controls:\n\nThese are mostly EditView objects:\n\n- <http://developer.android.com/reference/android/widget/EditText.html>\n\nRedesign the activity to take a value from the picker or directly from a text view and maintain a \"Total so Far\" Value:\n\n![](img/lab2s902.png)\n\n![](img/lab2s901.png)\n\n![](img/lab2s903.png)\n\nIf the number picker is set to zero, then attempt to get a number from the text view.\n\nHere is a hint (a version of ***donatButonPressed()*** that does what we want):\n\n```\n  public void donateButtonPressed (View view)\n  {\n    String method = paymentMethod.getCheckedRadioButtonId() == R.id.PayPal ? \"PayPal\" : \"Direct\";\n    progressBar.setProgress(totalDonated);\n\n    int donatedAmount =  amountPicker.getValue();\n    if (donatedAmount == 0)\n    {\n      String text = amountText.getText().toString();\n      if (!text.equals(\"\"))\n        donatedAmount = Integer.parseInt(text);\n    }\n    totalDonated  = totalDonated + donatedAmount;\n    Log.v(\"Donate\", amountPicker.getValue() + \" donated by \" +  method + \"\\nCurrent total \" + totalDonated);\n   }\n```\n\n##Exercise 2:\n\nRevise the app such that when the target is achieved (10000) - then no more donations accepted, and the user is made aware of this.\n\nHint - here is how you can display a simple alert:\n\n```\n      Toast.makeText(this, \"Target Exceeded!\", Toast.LENGTH_SHORT).show();\n```\n\n##Exercise 3:\n\nModify the colour scheme for our widgets..\n\nYou will notice that the Floating Action Button, the Radio Buttons, the Progress Bar etc, are all a kind of pink - not really in line with our current colour scheme.\n\nHint - have a look at your <b>colors.xml</b>\n\n\n![](img/lab2s904.png)\n\n\nArchive of lab with the above Exercises:\n\n- [Donation.1.5.zip](archives/Donation.1.5.zip)\n"}]}